{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/RecordingTimer.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Utils/MessageFormat.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Media/InlineKeyboard.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","isChatVerified","is_verified","superGroupId","superGroup","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","__webpack_require__","d","__webpack_exports__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","handleBotCommandClick","Event","command","currentTarget","innerText","dispatchEvent","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","_Users_tolyayanot_dev_codingstudio_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","AttachButton","anchorEl","handleMenuClick","handleMenuClose","handleAttachMedia","onAttachMedia","handleAttachDocument","onAttachDocument","handleAttachLocation","onAttachLocation","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","geolocation","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","RecordingTimer","timerID","setInterval","tick","clearInterval","doubleNumber","s","startDate","deltaTime","ms","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","MessageFormat","html","xml","DOMParser","parseFromString","isNewLine","c","pos","xmlToString","children","len","entityType","tagName","getAttribute","getEntityType","newEntity","textContent","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","draft","newMessageRef","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","sendText","formatted","format","attachMediaRef","handleAttachMediaComplete","files","Array","name","handleSendAudio","handleSendVideo","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","getCurrentPosition","coords","live_period","handleRecordMouseDown","recordStartDate","stopRecord","startRecordTimer","startRecord","handleRecordMouseUp","isRecordButton","recordButtonRef","contains","clearTimeout","isAudioRecord","startRecordAudio","startRecordVideo","needSendRecord","stopRecordAudio","stopRecordVideo","isVideoRecording","mediaDevices","getUserMedia","addEventListener","onVideoMetaData","autoplay","playsinline","removeEventListener","canvas","canvasRef","canvasContext","getContext","fillStyle","fillRect","beginPath","ellipse","PI","clip","canvasStream","captureStream","audioPlusCanvasStream","MediaStream","videoTrack","addTrack","audioTrack","videoRecorder","RecordRTC","startRecording","drawVideoFrame","w","videoWidth","h","videoHeight","scaleX","scaleY","drawImage","stopRecording","toISOString","destroyVideo","clearRect","destroy","recordDuration","handleSendVideoNote","isAudioRecording","audioRecorder","Recorder","monitorGain","numberOfChannels","bitRate","encoderSampleRate","onstart","handleAudioRecordStart","ondataavailable","handleAudioRecordDataAvailable","typedArray","destroyAudio","handleSendVoiceNote","isRecording","handleKeyUp","setTyping","metaKey","altKey","ctrlKey","prompt","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","getAudioInfo","handleMetaData","handleTag","tag","tags","artist","pic","picture","jsmediatags","read","onSuccess","onError","info","getVideoInfo","handleTimeUpdate","toBlob","supports_streaming","originalEvent","kind","indexOf","getAsFile","htmlData","sanitizeHtml","sanitizeConfig","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","handleChange","suggestStickers","regex","match","t1","trimRight","performance","emojiRegex","exec","getChatId","allowedTags","allowedAttributes","transformTags","em","strong","p","li","isRecordingSupported","Components_ColumnMiddle_InputBoxHeader","Components_ColumnMiddle_RecordingTimer","multiple","accept","ColumnMiddle_AttachButton","react_contenteditable_default","innerRef","onKeyUp","Suspense","fallback","InsertEmoticon_default","buttonRef","KeyboardVoice_default","Videocam_default","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","plainText","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","setMilliseconds","getMilliseconds","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","prototype","isVerified","propTypes","PropTypes","isRequired","bool","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","element","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","InlineKeyboard","replyMarkup","keyboard","rows","buttons","btn","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","showUnreadSeparator","_this$props11","webPage","media","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","Message_Media_WebPage","Message_Media_InlineKeyboard","messageAuthorColor","@keyframes highlighted","PinnedMessage","onUpdateChatPinnedMessage","pinned_message_id","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","getScrollBtnDisplay","scrollBottomBtn","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","onVolumeChange","defaultOptions","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/4.c78b14b2.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSecret':\n        case 'chatTypePrivate':\n            const userId = chat.type.user_id;\n            const user = UserStore.get(userId);\n            return user && user.is_verified;\n\n        case 'chatTypeSupergroup':\n            const superGroupId = chat.type.supergroup_id;\n            const superGroup = SupergroupStore.get(superGroupId);\n            return superGroup && superGroup.is_verified;\n    }\n    return false;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    isChatVerified,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction handleBotCommandClick(e) {\n    e.preventDefault();\n    const event = new Event('botCommandClick');\n    event.command = e.currentTarget.innerText;\n    window.dispatchEvent(event);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={handleBotCommandClick} href='#'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AttachLocationIcon from '@material-ui/icons/Room';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachMedia = () => {\n        this.handleMenuClose();\n\n        const { onAttachMedia } = this.props;\n        if (!onAttachMedia) return;\n\n        setTimeout(() => onAttachMedia(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachLocation = () => {\n        this.handleMenuClose();\n\n        const { onAttachLocation } = this.props;\n        if (!onAttachLocation) return;\n\n        onAttachLocation();\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachMedia} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto') + ', ' + t('AttachVideo') + ', ' + t('AttachMusic')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachLocation} disabled={!navigator.geolocation}>\n                        <ListItemIcon>\n                            <AttachLocationIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachLocation')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachMedia: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React, { Component } from 'react';\nimport './RecordingTimer.css';\n\nclass RecordingTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.timerID = null;\n        this.state = {\n            date: new Date()\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 10);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        const doubleNumber = n => {\n            const s = n.toString();\n            if (s.length === 1) return '0' + s;\n            return s;\n        };\n\n        if (!this.props.startDate) return;\n        const deltaTime = this.state.date.getTime() - this.props.startDate.getTime();\n        const ms = Math.floor((deltaTime % 1000) / 10);\n        const seconds = Math.floor((deltaTime / 1000) % 60);\n        const minutes = Math.floor((deltaTime / (1000 * 60)) % 60);\n        const content = doubleNumber(minutes) + ':' + doubleNumber(seconds) + ',' + ms;\n\n        return (\n            <div className='recording-timer-container'>\n                <div className='recording-timer-circle' />\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default RecordingTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","class MessageFormat {\n    static format(html) {\n        html = html\n            .replace(/<div>/gi, '<br>')\n            .replace(/<\\/div>/gi, '<br>')\n            .replace(/(<br ?\\/?>)+/gi, '\\n'); // replace multiple br to one \\n\n\n        const xml = new DOMParser().parseFromString(html, 'text/html');\n\n        const newEntity = (type, offset, len) => {\n            return {\n                '@type': 'textEntity',\n                offset: offset,\n                length: len,\n                type: type\n            };\n        };\n\n        const getEntityType = xml => {\n            if (xml.tagName) {\n                switch (xml.tagName.toLowerCase()) {\n                    case 'b':\n                        return {\n                            '@type': 'textEntityTypeBold'\n                        };\n                    case 'i':\n                        return {\n                            '@type': 'textEntityTypeItalic'\n                        };\n                    case 'pre':\n                        return {\n                            '@type': 'textEntityTypePre'\n                        };\n                    case 'code':\n                        return {\n                            '@type': 'textEntityTypeCode'\n                        };\n\n                    case 'a':\n                        if (xml.innerHTML && xml.getAttribute('href')) {\n                            return {\n                                '@type': 'textEntityTypeTextUrl',\n                                url: xml.getAttribute('href')\n                            };\n                        }\n                }\n            }\n\n            return null;\n        };\n\n        const isNewLine = c => {\n            return c === '\\n' || c === '\\r';\n        };\n\n        const xmlToString = (xml, result) => {\n            const children = xml.childNodes;\n\n            if (!children.length) {\n                if (xml.textContent) {\n                    const textContent = xml.textContent\n                        .replace(/ +/g, ' ')\n                        .replace(/\\t+/g, '\\t')\n                        .replace(/(\\r\\n)+/g, '\\r\\n') // for Windows\n                        .replace(/\\r+/g, '\\r') // for Mac OS 9 and prior\n                        .replace(/\\n+/g, '\\n'); // for everything else\n\n                    if (isNewLine(textContent) && isNewLine(result.text.charAt(result.pos - 1))) return;\n\n                    result.text += textContent;\n                    result.pos += textContent.length;\n                }\n                return;\n            }\n\n            const offset = result.pos;\n\n            for (let child of children) {\n                xmlToString(child, result);\n            }\n\n            const len = result.pos - offset;\n\n            const entityType = getEntityType(xml);\n            if (entityType) {\n                result.entities.push(newEntity(entityType, offset, len));\n            }\n        };\n\n        const result = {\n            text: '',\n            pos: 0,\n            entities: []\n        };\n\n        xmlToString(xml, result);\n\n        return result;\n    }\n}\n\nexport default MessageFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport Recorder from 'opus-recorder';\nimport RecordRTC from 'recordrtc';\nimport { getTracks } from 'recordrtc';\nimport jsmediatags from 'jsmediatags';\nimport sanitizeHtml from 'sanitize-html';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport RecordingTimer from './../ColumnMiddle/RecordingTimer';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport MessageFormat from '../../Utils/MessageFormat';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\nimport ContentEditable from 'react-contenteditable';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachMediaRef = React.createRef();\n        this.newMessageRef = React.createRef();\n        this.recordButtonRef = React.createRef();\n        this.canvasRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n        this.sanitizeConfig = {\n            allowedTags: ['b', 'i', 'a', 'br', 'div'],\n            allowedAttributes: {\n                a: ['href']\n            },\n            transformTags: {\n                em: 'i',\n                strong: 'b',\n                p: 'div',\n                li: 'div'\n            }\n        };\n\n        this.audioRecorder = null;\n        this.videoRecorder = null;\n        this.stream = null;\n        this.video = null;\n        this.canvasContext = null;\n        this.canvasStream = null;\n        this.needSendRecord = false;\n        this.startRecordTimer = 0;\n        this.isVideoRecording = false;\n        this.isAudioRecording = false;\n\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false,\n            innerHTML: '',\n            recordStartDate: null,\n            isAudioRecord: true\n        };\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n        window.addEventListener('mouseup', this.handleRecordMouseUp);\n        window.addEventListener('botCommandClick', this.handleBotCommandClick);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.suggestStickers();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        clearTimeout(this.startRecordTimer);\n        if (this.audioRecorder) {\n            this.audioRecorder.onstart = null;\n            this.audioRecorder.ondataavailable = null;\n            this.audioRecorder.stop();\n            this.audioRecorder = null;\n        }\n        this.stopRecordVideo(false);\n        if (this.stream) {\n            this.stream.stop();\n            this.stream = null;\n        }\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n        window.removeEventListener('mouseup', this.handleRecordMouseUp);\n        window.removeEventListener('botCommandClick', this.handleBotCommandClick);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.setState({ innerHTML: '' });\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.setState({\n            innerHTML: '',\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            this.setState({ innerHTML: draft.text });\n        } else {\n            this.setState({ innerHTML: '' });\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.suggestStickers();\n        } else if (prevState.innerHTML !== this.state.innerHTML) {\n            this.suggestStickers();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                this.newMessageRef.current.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        this.sendText(this.newMessageRef.current.innerHTML);\n    };\n\n    sendText = text => {\n        const formatted = MessageFormat.format(text);\n\n        if (!formatted.text.trim()) return;\n\n        this.setState({ innerHTML: '' });\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: formatted.text,\n                entities: formatted.entities\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleBotCommandClick = e => {\n        this.sendText(e.command);\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachMedia = () => {\n        if (!this.attachMediaRef) return;\n\n        this.attachMediaRef.current.click();\n    };\n\n    handleAttachMediaComplete = () => {\n        let files = this.attachMediaRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            const fileName = file.name.toLowerCase();\n            if (fileName.endsWith('.mp3') || fileName.endsWith('.flac')) {\n                this.handleSendAudio(file);\n            } else if (fileName.endsWith('.mp4')) {\n                this.handleSendVideo(file, file.name);\n            } else {\n                readImageSize(file, result => {\n                    this.handleSendPhoto(result);\n                });\n            }\n        });\n\n        this.attachMediaRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    handleAttachLocation = () => {\n        navigator.geolocation.getCurrentPosition(\n            position => {\n                const content = {\n                    '@type': 'inputMessageLocation',\n                    location: {\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude\n                    },\n                    live_period: 0\n                };\n\n                this.onSendInternal(content, true, () => {});\n            },\n            error => console.error(error)\n        );\n    };\n\n    isRecording() {\n        return this.state.recordStartDate !== null;\n    }\n\n    isRecordingSupported() {\n        return Recorder.isRecordingSupported();\n    }\n\n    handleRecordMouseDown = e => {\n        if (this.state.recordStartDate !== null) {\n            this.stopRecord(true);\n        } else {\n            this.startRecordTimer = setTimeout(this.startRecord, 300);\n        }\n    };\n\n    handleRecordMouseUp = e => {\n        const isRecordButton = this.recordButtonRef.current && this.recordButtonRef.current.contains(e.target);\n\n        if (this.startRecordTimer) {\n            if (isRecordButton) {\n                clearTimeout(this.startRecordTimer);\n                this.startRecordTimer = 0;\n                this.setState(state => ({ isAudioRecord: !state.isAudioRecord }));\n            }\n        } else {\n            this.stopRecord(isRecordButton);\n        }\n    };\n\n    startRecord = () => {\n        this.startRecordTimer = 0;\n        if (this.state.isAudioRecord) {\n            this.startRecordAudio();\n        } else {\n            this.startRecordVideo();\n        }\n    };\n\n    stopRecord = needSendRecord => {\n        this.needSendRecord = needSendRecord;\n        if (this.state.isAudioRecord) {\n            this.stopRecordAudio();\n        } else {\n            this.stopRecordVideo(this.needSendRecord);\n        }\n    };\n\n    startRecordVideo = () => {\n        if (this.isVideoRecording) return;\n        this.isVideoRecording = true;\n\n        navigator.mediaDevices\n            .getUserMedia({\n                video: true,\n                audio: true\n            })\n            .then(stream => {\n                this.stream = stream;\n\n                this.video = document.createElement('video');\n                this.video.addEventListener('loadedmetadata', this.onVideoMetaData);\n                this.video.volume = 0;\n                this.video.autoplay = true;\n                this.video.playsinline = true;\n                this.video.srcObject = stream;\n            })\n            .catch(err => {\n                this.isVideoRecording = false;\n                console.log('Can not get video stream', err);\n            });\n    };\n\n    onVideoMetaData = () => {\n        this.video.removeEventListener('loadedmetadata', this.onVideoMetaData);\n\n        const canvas = this.canvasRef.current;\n        this.canvasContext = canvas.getContext('2d');\n        this.canvasContext.fillStyle = '#ffffff';\n        this.canvasContext.fillRect(0, 0, 240, 240);\n        this.canvasContext.beginPath();\n        this.canvasContext.ellipse(120, 120, 120, 120, 0, 0, Math.PI * 2);\n        this.canvasContext.clip();\n        this.canvasStream = canvas.captureStream();\n\n        const audioPlusCanvasStream = new MediaStream();\n\n        getTracks(this.canvasStream, 'video').forEach(videoTrack => {\n            audioPlusCanvasStream.addTrack(videoTrack);\n        });\n\n        getTracks(this.stream, 'audio').forEach(audioTrack => {\n            audioPlusCanvasStream.addTrack(audioTrack);\n        });\n\n        this.videoRecorder = RecordRTC(audioPlusCanvasStream, {\n            type: 'video',\n            mimeType: 'video/mp4'\n        });\n        this.videoRecorder.startRecording();\n        this.setState({ recordStartDate: new Date() });\n\n        requestAnimationFrame(this.drawVideoFrame);\n    };\n\n    drawVideoFrame = () => {\n        if (this.videoRecorder === null) return;\n\n        const w = this.video.videoWidth;\n        const h = this.video.videoHeight;\n        const scaleX = 240 / w;\n        const scaleY = 240 / h;\n        const scale = Math.max(scaleX, scaleY);\n\n        this.canvasContext.drawImage(this.video, -(w * scale - 240) / 2, -(h * scale - 240) / 2, w * scale, h * scale);\n\n        requestAnimationFrame(this.drawVideoFrame);\n    };\n\n    stopRecordVideo = needSendRecord => {\n        if (this.videoRecorder) {\n            this.videoRecorder.stopRecording(() => {\n                const blob = this.videoRecorder.getBlob();\n                const fileName = new Date().toISOString() + '.mp4';\n\n                this.destroyVideo();\n                this.canvasStream.stop();\n                this.canvasStream = null;\n                this.canvasContext.clearRect(0, 0, 240, 240);\n                this.videoRecorder.destroy();\n                this.videoRecorder = null;\n\n                if (this.state.recordStartDate) {\n                    this.recordDuration = Math.floor(\n                        (new Date().getTime() - this.state.recordStartDate.getTime()) / 1000\n                    );\n                    this.setState({ recordStartDate: null });\n\n                    if (needSendRecord) {\n                        this.handleSendVideoNote(blob, fileName, this.recordDuration);\n                    }\n                }\n            });\n        } else {\n            this.destroyVideo();\n        }\n    };\n\n    destroyVideo = () => {\n        this.isVideoRecording = false;\n\n        if (this.video) {\n            this.video.removeEventListener('loadedmetadata', this.onVideoMetaData);\n            this.video.src = this.video.srcObject = null;\n            this.video = null;\n        }\n\n        if (this.stream) {\n            this.stream.stop();\n            this.stream = null;\n        }\n    };\n\n    startRecordAudio = () => {\n        if (this.isAudioRecording) return;\n        this.isAudioRecording = true;\n\n        if (!this.audioRecorder) {\n            this.audioRecorder = new Recorder({\n                monitorGain: 0,\n                numberOfChannels: 1,\n                bitRate: 35300,\n                encoderSampleRate: 48000\n            });\n            this.audioRecorder.onstart = this.handleAudioRecordStart;\n            this.audioRecorder.ondataavailable = this.handleAudioRecordDataAvailable;\n        }\n\n        navigator.mediaDevices\n            .getUserMedia({ audio: true })\n            .then(stream => {\n                this.stream = stream;\n                this.audioRecorder.start(stream);\n            })\n            .catch(err => {\n                this.isAudioRecording = false;\n                console.log('Can not get audio stream', err);\n            });\n    };\n\n    handleAudioRecordStart = () => {\n        this.setState({ recordStartDate: new Date() });\n    };\n\n    handleAudioRecordDataAvailable = typedArray => {\n        this.destroyAudio();\n\n        if (this.needSendRecord) {\n            const blob = new Blob([typedArray], { type: 'audio/ogg' });\n            const fileName = new Date().toISOString() + '.ogg';\n            this.handleSendVoiceNote(blob, fileName, this.recordDuration);\n        }\n    };\n\n    stopRecordAudio = () => {\n        if (this.audioRecorder && this.isRecording()) {\n            this.recordDuration = Math.floor((new Date().getTime() - this.state.recordStartDate.getTime()) / 1000);\n            this.setState({ recordStartDate: null });\n            this.audioRecorder.stop();\n        } else {\n            this.destroyAudio();\n        }\n    };\n\n    destroyAudio = () => {\n        this.isAudioRecording = false;\n\n        if (this.stream) {\n            this.stream.stop();\n            this.stream = null;\n        }\n    };\n\n    getInputText() {\n        return this.newMessageRef.current ? this.newMessageRef.current.innerText : '';\n    }\n\n    handleKeyUp = e => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.getInputText();\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            if (e.shiftKey || e.metaKey || e.altKey || e.ctrlKey) {\n                document.execCommand('insertText', false, '\\n');\n            } else {\n                this.handleSubmit();\n            }\n        } else if (e.key === 'b' && (e.ctrlKey || e.metaKey)) {\n            document.execCommand('bold', false);\n            e.preventDefault();\n        } else if (e.key === 'i' && (e.ctrlKey || e.metaKey)) {\n            document.execCommand('italic', false);\n            e.preventDefault();\n        } else if (e.key === 'u' && (e.ctrlKey || e.metaKey)) {\n            const url = prompt('Please enter URL', 'https://');\n            if (url != null) {\n                document.execCommand('createLink', false, url);\n            }\n            e.preventDefault();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = (file, fileName) => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: fileName || file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    getAudioInfo = (file, callback) => {\n        const handleMetaData = () => {\n            audio.removeEventListener('loadedmetadata', handleMetaData);\n\n            const handleTag = tag => {\n                const title = tag.tags.title || file.name;\n                const performer = tag.tags.artist || '';\n                const pic = tag.tags.picture\n                    ? {\n                          thumbnail: {\n                              '@type': 'inputFileBlob',\n                              name: file.name + '.jpg',\n                              data: tag.tags.picture.data\n                          },\n                          width: 0,\n                          height: 0\n                      }\n                    : null;\n\n                callback({\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    album_cover_thumbnail: pic,\n                    duration: Math.floor(audio.duration),\n                    title: title,\n                    performer: performer\n                });\n            };\n\n            jsmediatags.read(file, {\n                onSuccess: handleTag,\n                onError: function(error) {\n                    console.log(':(', error.type, error.info);\n                    handleTag({ tags: {} });\n                }\n            });\n        };\n\n        const audio = new Audio();\n        audio.addEventListener('loadedmetadata', handleMetaData);\n        audio.src = window.URL.createObjectURL(file);\n    };\n\n    handleSendAudio = file => {\n        if (!file) return;\n\n        this.getAudioInfo(file, content => {\n            this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n        });\n    };\n\n    handleSendVoiceNote = (file, fileName, duration) => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageVoiceNote',\n            voice_note: { '@type': 'inputFileBlob', name: fileName, data: file },\n            duration: duration\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    getVideoInfo = (file, fileName, callback) => {\n        const video = document.createElement('video');\n        video.volume = 0;\n        video.playsinline = true;\n\n        const handleTimeUpdate = () => {\n            video.removeEventListener('timeupdate', handleTimeUpdate);\n\n            const canvas = document.createElement('canvas');\n            const canvasContext = canvas.getContext('2d');\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            canvasContext.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n            canvas.toBlob(\n                blob => {\n                    callback({\n                        thumbnail: {\n                            thumbnail: { '@type': 'inputFileBlob', name: fileName + '.jpg', data: blob },\n                            width: video.videoWidth,\n                            height: video.videoHeight\n                        },\n                        width: video.videoWidth,\n                        height: video.videoHeight,\n                        duration: Math.floor(video.duration)\n                    });\n                },\n                'image/jpeg',\n                0.5\n            );\n        };\n\n        const handleMetaData = () => {\n            video.removeEventListener('loadedmetadata', handleMetaData);\n            video.addEventListener('timeupdate', handleTimeUpdate);\n            video.currentTime = 0;\n        };\n\n        video.addEventListener('loadedmetadata', handleMetaData);\n        video.src = window.URL.createObjectURL(file);\n    };\n\n    handleSendVideo = (file, fileName) => {\n        if (!file) return;\n\n        this.getVideoInfo(file, fileName, info => {\n            const content = {\n                '@type': 'inputMessageVideo',\n                video: { '@type': 'inputFileBlob', name: fileName, data: file },\n                thumbnail: info.thumbnail,\n                duration: info.duration,\n                width: info.width,\n                height: info.height,\n                supports_streaming: false,\n                ttl: 0\n            };\n\n            this.onSendInternal(content, true, result => {\n                const cachedMessage = MessageStore.get(result.chat_id, result.id);\n                if (cachedMessage != null) {\n                    this.handleSendingMessage(cachedMessage, file);\n                }\n\n                FileStore.uploadFile(result.content.video.video.id, result);\n            });\n        });\n    };\n\n    handleSendVideoNote = (file, fileName, duration) => {\n        if (!file) return;\n\n        this.getVideoInfo(file, fileName, info => {\n            const content = {\n                '@type': 'inputMessageVideoNote',\n                video_note: { '@type': 'inputFileBlob', name: fileName, data: file },\n                thumbnail: info.thumbnail,\n                duration: duration,\n                length: info.width\n            };\n\n            this.onSendInternal(content, true, result => {\n                const cachedMessage = MessageStore.get(result.chat_id, result.id);\n                if (cachedMessage != null) {\n                    this.handleSendingMessage(cachedMessage, file);\n                }\n\n                FileStore.uploadFile(result.content.video_note.video.id, result);\n            });\n        });\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const htmlData = event.clipboardData.getData('text/html');\n        if (htmlData) {\n            event.preventDefault();\n            const s = sanitizeHtml(htmlData, this.sanitizeConfig);\n\n            document.execCommand('insertHTML', false, s);\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n        document.execCommand('insertText', false, emoji.native);\n    };\n\n    handleChange = e => {\n        this.setState({ innerHTML: e.target.value });\n    };\n\n    suggestStickers = async event => {\n        const innerText = this.getInputText().trimRight();\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        {this.isRecording() ? (\n                            <div className='inputbox-recording-column'>\n                                <RecordingTimer startDate={this.state.recordStartDate} />\n                                <div className='inputbox-recording-column-text'>Release outside to cancel</div>\n                            </div>\n                        ) : (\n                            <>\n                                <div className='inputbox-left-column'>\n                                    <input\n                                        ref={this.attachDocumentRef}\n                                        className='inputbox-attach-button'\n                                        type='file'\n                                        multiple='multiple'\n                                        onChange={this.handleAttachDocumentComplete}\n                                    />\n                                    <input\n                                        ref={this.attachMediaRef}\n                                        className='inputbox-attach-button'\n                                        type='file'\n                                        multiple='multiple'\n                                        accept='image/*, video/mp4, audio/mp3, audio/flac'\n                                        onChange={this.handleAttachMediaComplete}\n                                    />\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachMedia={this.handleAttachMedia}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachLocation={this.handleAttachLocation}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                </div>\n                                <div className='inputbox-middle-column'>\n                                    <ContentEditable\n                                        id='inputbox-message'\n                                        innerRef={this.newMessageRef}\n                                        placeholder={t('Message')}\n                                        html={this.state.innerHTML}\n                                        onKeyDown={this.handleKeyDown}\n                                        onKeyUp={this.handleKeyUp}\n                                        onPaste={this.handlePaste}\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className='inputbox-btn-column'>\n                                    <React.Suspense\n                                        fallback={\n                                            <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                                <InsertEmoticonIcon />\n                                            </IconButton>\n                                        }>\n                                        <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                    </React.Suspense>\n                                </div>\n                            </>\n                        )}\n                        <div className='inputbox-btn-column'>\n                            {this.getInputText().trim().length === 0 && this.isRecordingSupported() ? (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Mic'\n                                    buttonRef={this.recordButtonRef}\n                                    onMouseDown={this.handleRecordMouseDown}>\n                                    {this.state.isAudioRecord ? <KeyboardVoiceIcon /> : <VideocamIcon />}\n                                </IconButton>\n                            ) : (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Send'\n                                    onClick={this.handleSubmit}>\n                                    <SendIcon />\n                                </IconButton>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <canvas\n                    ref={this.canvasRef}\n                    style={{ display: this.isRecording() && !this.state.isAudioRecord ? 'block' : 'none' }}\n                    width='240'\n                    height='240'\n                    className='video-note-record'\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle, isChatVerified, isChatMuted } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nclass DialogTitleControl extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextState.isMuted !== this.state.isMuted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n        const isVerified = isChatVerified(chatId);\n\n        return (\n            <div className='dialog-title'>\n                {title}\n                {isVerified ? <div className='verified-badge' /> : null}\n                {this.state.isMuted ? <div className='muted-badge' /> : null}\n            </div>\n        );\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","import React from 'react';\nimport './InlineKeyboard.css';\n\nclass InlineKeyboard extends React.Component {\n    render() {\n        if (this.props.replyMarkup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const keyboard = this.props.replyMarkup.rows.map(row => {\n            const buttons = row.map(btn => {\n                let onClick = null;\n                let disabled = true;\n\n                switch (btn.type['@type']) {\n                    case 'inlineKeyboardButtonTypeBuy':\n                        break;\n                    case 'inlineKeyboardButtonTypeCallback':\n                        break;\n                    case 'inlineKeyboardButtonTypeCallbackGame':\n                        break;\n                    case 'inlineKeyboardButtonTypeSwitchInline':\n                        break;\n                    case 'inlineKeyboardButtonTypeUrl':\n                        disabled = false;\n                        onClick = () => {\n                            window.open(btn.type.url, '_blank');\n                        };\n                        break;\n                }\n\n                return (\n                    <button className='inline-keyboard-btn' onClick={onClick} disabled={disabled}>\n                        {btn.text}\n                    </button>\n                );\n            });\n\n            return <div className='inline-keyboard-row'>{buttons}</div>;\n        });\n\n        return <div className='inline-keyboard'>{keyboard}</div>;\n    }\n}\n\nexport default InlineKeyboard;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport InlineKeyboard from './Media/InlineKeyboard';\n\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            classes.message,\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                        {message.reply_markup && <InlineKeyboard replyMarkup={message.reply_markup} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            //console.log('PinnedMessage.getDerivedStateFromProps', chat, chat.pinned_message_id);\n            return {\n                prevPropsChatId: chatId,\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        //console.log('PinnedMessage.message', chatId, messageId, message);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div\n                className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                onClick={this.handleClick}>\n                <div className='pinned-message-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='pinned-message-content'>\n                        <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                            {t('PinnedMessage')}\n                        </div>\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                    <div className='pinned-message-delete-button'>\n                        <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollBottomBtn = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    getScrollBtnDisplay = () => {\n        const list = this.listRef.current;\n        if (!list) return 'none';\n        if (list.scrollTop + list.offsetHeight > list.scrollHeight - 200) return 'none';\n        return 'block';\n    };\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.scrollBottomBtn.current) {\n            this.scrollBottomBtn.current.style.display = this.getScrollBtnDisplay();\n        }\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <IconButton\n                    buttonRef={this.scrollBottomBtn}\n                    className='scroll-bottom-btn'\n                    aria-label='Scroll'\n                    style={{ display: this.getScrollBtnDisplay() }}\n                    onClick={this.scrollToBottom}>\n                    <ArrowDownward />\n                </IconButton>\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}